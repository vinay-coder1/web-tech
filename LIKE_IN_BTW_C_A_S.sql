SELECT * FROM test.customers;

delete from customers where id= 5;

 DELETE FROM CUSTOMERS;
 
 SELECT * FROM CUSTOMERS WHERE SALARY LIKE '1000%';
 
  SELECT * FROM CUSTOMERS WHERE SALARY LIKE '%00%';
  
SELECT * FROM CUSTOMERS WHERE SALARY LIKE '_0_0%';

  SELECT * FROM CUSTOMERS WHERE SALARY LIKE '5_0%';
  
    SELECT * FROM CUSTOMERS WHERE SALARY LIKE '5%0';
    
    SELECT * FROM CUSTOMERS WHERE SALARY LIKE '%0';
    
    SELECT MIN(SALARY)  AS LOWEST_SALARY FROM customers; 
    
   SELECT MAX(SALARY)  AS HIGHEST_SALARY FROM customers; 
    
 SELECT * FROM CUSTOMERS WHERE SALARY = (SELECT  MIN(SALARY) FROM CUSTOMERS) ;
 
 SELECT COUNT(AGE) AS AGE_COUNT FROM CUSTOMERS;  -- NEGLATES NULL VALUES 
 
 SELECT COUNT(ID) AS ID_COUNT FROM CUSTOMERS;
 
SELECT SUM(SALARY) AS TOTAL_SALARY FROM CUSTOMERS;  -- NULL values are ignored.

SELECT SUM(AGE) AS TOTAL_AGE FROM CUSTOMERS;

SELECT AVG(SALARY) AS AVG_SALARY FROM CUSTOMERS; 

SELECT AVG(AGE) AS AVG_AGE FROM CUSTOMERS; 
 
SELECT * FROM customers WHERE SALARY IN (5000 ,10000); 
 
SELECT * FROM customers WHERE SALARY BETWEEN 1000 AND 10000;
    
SELECT * FROM customers WHERE AGE BETWEEN 18 AND 20;

SELECT ID, CONCAT(NAME,ADDRESS,AGE) AS CUSTOMER FROM customers;

SELECT ID, CONCAT(NAME,' ',ADDRESS,' ',AGE) AS CUSTOMER FROM customers;

SELECT C.ID, C.NAME FROM customers AS C;

SELECT *  FROM CUSTOMERS WHERE AGE > IFNULL(NULL,20); 

SELECT * FROM CUSTOMERS WHERE IF(AGE<18, 'NOT ELIGIBLE', 'ELIGIBLE');

IF(1=1)
BEGIN
    PRINT 'Executed the statement as condition is TRUE';
END;
    ELSE
  BEGIN    
    PRINT 'Executed the statement as condition is FALSE';	
    END
    